---
- name: Setup ethernet
  template:
    src: ethernet.j2
    dest: /etc/network/interfaces.d/ethernet
  become: true
  notify: retart network

- name: Enable and start portforwarding for ipv4
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    reload: yes

- name: Enable ipv4 nat
  template:
    src: iptables.ipv4.nat.j2
    dest: /etc/iptables.ipv4.nat
  become: true
  notify: reload iptables

- name: Restore iptables on reboot
  lineinfile:
    path: /etc/rc.local
    regexp: "^iptables-restore < /etc/iptables.ipv4.nat"
    state: present
    line: "iptables-restore < /etc/iptables.ipv4.nat"
    insertbefore: "exit 0"

- name: Install dnsmasq
  apt:
    name: dnsmasq
    state: present
  
- name: Enable and start dnsmasq
  service:
    name: dnsmasq.service
    enabled: yes
    state: started

- name: Copy dnsmasq base config
  template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
  notify: restart dnsmasq

- name: Ensure pihole directory exists
  file:
    path: /etc/pihole
    state: directory

- name: Install dependencies for {{ hosts_repo }}
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - libxml2-dev
      - libxslt-dev
      - python3
      - python3-pip
      - virtualenv

- name: Copy update_hosts
  template:
    src: update_hosts.j2
    dest: /usr/local/bin/update_hosts
    mode: "4755"

- name: Download {{ hosts_repo }}
  git:
    repo: "{{ hosts_repo }}"
    dest: "{{ hosts_dir }}"
    update: no
    force: yes
  notify:
    - update hosts

- name: Install python dependencies for {{ hosts_repo }}
  pip:
    chdir: "{{ hosts_dir }}"
    requirements: requirements.txt
    virtualenv: "{{ hosts_dir }}/venv"
    virtualenv_python: python3

- name: Copy update_hosts service file
  template:
    src: update_hosts.service.j2
    dest: /etc/systemd/system/update_hosts.service
  notify: reload systemd

- name: Copy update_hosts timer
  template:
    src: update_hosts.timer.j2
    dest: /etc/systemd/system/update_hosts.timer
  notify: reload systemd

- name: Start update_hosts timer
  service:
    name: update_hosts.timer
    enabled: yes
    state: started
